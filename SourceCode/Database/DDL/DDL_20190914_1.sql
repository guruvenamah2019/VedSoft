 CREATE  TABLE STUDENT
 (ID INTEGER PRIMARY KEY,
  USER_ID INTEGER ,
  CUSTOMER_ID INTEGER,
  STUDENT_FIRST_NAME VARCHAR(100),
  STUDENT_MIDDLE_NAME VARCHAR(100),
  STUDENT_LAST_NAME VARCHAR(100),
  STUDENT_EMAIL VARCHAR(100),
  STUDENT_CONTACTNO INTEGER,
  FATHER_FIRST_NAME VARCHAR(100),
  FATHER_MIDDLE_NAME VARCHAR(100),
  FATHER_LAST_NAME VARCHAR(100),
  FATHER_CONTACTNO INTEGER,
  MOTHER_NAME  VARCHAR(100),
  MOTHER_CONTACTNO INTEGER,
  GUARDIAN_NAME    VARCHAR(100),
  GUARDIAN_CONTACTNO INTEGER,
  PRIMARY_EMAIL VARCHAR(100),
  SECONDARY_EMAIL VARCHAR(100),
  IS_ENROLLED INTEGER,
  ACTIVE INTEGER,
  CREATED_BY INTEGER,
  CREATED_DATE DATE,
  MODIFIED_BY INTEGER,
  MODIFIED_DATE DATE, 
CONSTRAINT STUDENT_FK1
FOREIGN KEY  (USER_ID)
REFERENCES USER_MASTER(ID),
CONSTRAINT STUDENT_FK2
FOREIGN KEY  (CUSTOMER_ID)
REFERENCES CUSTOMER_MASTER(ID)  
  );
CREATE TABLE STUDENT_ADMISSION_DETAILS
(ID INTEGER PRIMARY KEY,
STUDENT_ID INTEGER,
CUSTOMER_ID INTEGER,
ACADEMIC_YEARID INTEGER,
DATE_OF_ADMISSION DATE,
ADMISSION_TYPEID  INTEGER,-- renew,new,provisional etc
CREATED_DATE DATE,
CREATED_BY INTEGER,
MODIFIED_DATE DATE,
MODIFIED_BY INTEGER,
CONSTRAINT STUDENT_ADMISSION_DETAILS_FK1
FOREIGN KEY  (STUDENT_ID)
REFERENCES STUDENT(ID),
CONSTRAINT STUDENT_ADMISSION_DETAILS_FK2
FOREIGN KEY  (CUSTOMER_ID)
REFERENCES CUSTOMER_MASTER(ID),
CONSTRAINT STUDENT_ADMISSION_DETAILS_FK3
FOREIGN KEY  (ADMISSION_TYPEID)
REFERENCES ADMISSION_TYPE(ID),
CONSTRAINT STUDENT_ADMISSION_DETAILS_FK4
FOREIGN KEY  (ACADEMIC_YEARID)
REFERENCES ACADEMIC_YEARS(ID)
);

CREATE TABLE ADMISSION_TYPE
(ID INTEGER PRIMARY KEY,
NAME VARCHAR(100)
);
